basePath: /
definitions:
  big.Int:
    type: object
  cfxaddress.Address:
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Attributes:
    properties:
      attribute_name:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      display_type:
        type: string
      id:
        type: integer
      metadataId:
        type: integer
      trait_type:
        type: string
      updatedAt:
        type: string
      value:
        type: string
    type: object
  models.Contract:
    properties:
      address:
        type: string
      app_id:
        type: integer
      base_uri:
        type: string
      chain_id:
        type: integer
      chain_type:
        type: integer
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      hash:
        type: string
      id:
        type: integer
      name:
        type: string
      owner_address:
        type: string
      status:
        description: 0-pending, 1-success, 2-failed
        type: integer
      symbol:
        type: string
      tx_id:
        type: integer
      type:
        description: 1-ERC721, 2-ERC1155
        type: integer
      updated_at:
        type: string
    type: object
  models.ExposedAttributes:
    properties:
      attribute_name:
        type: string
      display_type:
        type: string
      trait_type:
        type: string
      value:
        type: string
    type: object
  models.ExposedFile:
    properties:
      file_name:
        type: string
      file_size:
        type: string
      file_type:
        type: string
      file_url:
        type: string
    type: object
  models.ExposedMetadata:
    properties:
      attributes:
        items:
          $ref: '#/definitions/models.ExposedAttributes'
        type: array
      description:
        type: string
      external_link:
        type: string
      image:
        type: string
      name:
        type: string
    type: object
  models.Metadata:
    properties:
      app_id:
        type: integer
      attributes:
        items:
          $ref: '#/definitions/models.Attributes'
        type: array
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      external_link:
        type: string
      id:
        type: integer
      image:
        type: string
      metadata_id:
        type: string
      name:
        type: string
      nft_address:
        type: string
      updatedAt:
        type: string
      uri:
        type: string
    type: object
  models.MintTask:
    properties:
      amount:
        type: integer
      app_id:
        type: integer
      chain_id:
        type: integer
      chain_type:
        type: integer
      contract:
        type: string
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      error:
        type: string
      hash:
        type: string
      id:
        type: integer
      mint_to:
        type: string
      status:
        description: 0-pending, 1-success, 2-failed
        type: integer
      token_id:
        type: integer
      token_uri:
        type: string
      tx_id:
        type: integer
      updated_at:
        type: string
    type: object
  services.ContractDeployDto:
    properties:
      base_uri:
        type: string
      chain:
        type: string
      name:
        type: string
      owner_address:
        type: string
      symbol:
        type: string
      type:
        type: string
    required:
    - chain
    - name
    - owner_address
    - symbol
    - type
    type: object
  services.CreateMetadataResponse:
    properties:
      metadata_uri:
        type: string
    type: object
  services.CustomMintDto:
    properties:
      chain:
        type: string
      contract_address:
        type: string
      metadata_uri:
        type: string
      mint_to_address:
        type: string
      token_id:
        type: string
    required:
    - chain
    - contract_address
    - metadata_uri
    - mint_to_address
    type: object
  services.EasyMintFileDto:
    properties:
      chain:
        type: string
      description:
        type: string
      mint_to_address:
        type: string
      name:
        type: string
    required:
    - chain
    - description
    - mint_to_address
    - name
    type: object
  services.EasyMintMetaDto:
    properties:
      chain:
        type: string
      description:
        type: string
      file_url:
        type: string
      mint_to_address:
        type: string
      name:
        type: string
    required:
    - chain
    - description
    - file_url
    - mint_to_address
    - name
    type: object
  services.QueryMetadataResponse:
    properties:
      metadata:
        $ref: '#/definitions/models.ExposedMetadata'
      uri:
        type: string
    type: object
  services.SponsorInfo:
    properties:
      collateral_sponsor:
        $ref: '#/definitions/cfxaddress.Address'
      collateral_sponsor_balance:
        $ref: '#/definitions/big.Int'
      gas_sponsor:
        $ref: '#/definitions/cfxaddress.Address'
      gas_sponsor_balance:
        $ref: '#/definitions/big.Int'
      gas_upper_bound:
        $ref: '#/definitions/big.Int'
        description: Admin                    cfxaddress.Address `json:"admin"`
      is_all_white_listed:
        type: boolean
    type: object
  services.UploadFilesResponse:
    properties:
      file_name:
        type: string
      file_size:
        type: integer
      file_type:
        type: string
      file_url:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: The responses of the open api in swagger focus on the data field rather
    than the code and the message fields
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Rainbow-API
  version: "1.0"
paths:
  /v1/contracts:
    get:
      parameters:
      - description: Bearer Open_JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: page
        in: formData
        name: page
        type: integer
      - description: size
        in: formData
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Contract'
            type: array
        "500":
          description: internal error
          schema:
            type: string
      summary: Get the contracts list
      tags:
      - Contract
    post:
      parameters:
      - description: Bearer Open_JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: contract_info
        in: body
        name: contract_info
        required: true
        schema:
          $ref: '#/definitions/services.ContractDeployDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Contract'
        "400":
          description: invalid request
          schema:
            type: string
        "422":
          description: invalid address
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      summary: Deploy contract
      tags:
      - Contract
  /v1/contracts/:address/sponsor:
    get:
      parameters:
      - description: Bearer Open_JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: address
        in: path
        name: address
        required: true
        type: string
      - description: chain
        in: query
        name: chain
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/services.SponsorInfo'
            type: array
        "422":
          description: invalid address
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      summary: Get the sponsor of a contract
      tags:
      - Contract
    post:
      parameters:
      - description: Bearer Open_JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
        "422":
          description: invalid address
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      summary: Set the sponsor for a contract
      tags:
      - Contract
  /v1/login:
    post:
      parameters:
      - description: Bearer openapi_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: app_id
        in: formData
        name: app_id
        type: string
      - description: app_secret
        in: formData
        name: app_secret
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: correct response
          schema:
            type: string
        "401":
          description: internal error
          schema:
            type: string
      summary: App login
      tags:
      - Login
  /v1/metadata/:
    get:
      parameters:
      - description: Bearer openapi_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: nft_address
        in: query
        name: nft_address
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/services.QueryMetadataResponse'
            type: array
        "500":
          description: internal error
          schema:
            type: string
      summary: Query metadata list
      tags:
      - Metadata
    post:
      parameters:
      - description: Bearer openapi_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: metadata_info
        in: body
        name: metadata_info
        required: true
        schema:
          $ref: '#/definitions/models.Metadata'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.CreateMetadataResponse'
        "400":
          description: invalid request
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      summary: Create nft metadata
      tags:
      - Metadata
  /v1/metadata/:metadata_id:
    get:
      parameters:
      - description: Bearer openapi_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: metadata_id
        in: path
        name: metadata_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ExposedMetadata'
        "400":
          description: invalid request
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      summary: Query metadata
      tags:
      - Metadata
  /v1/metadata/files:
    get:
      parameters:
      - description: Bearer openapi_token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ExposedFile'
            type: array
        "500":
          description: internal error
          schema:
            type: string
      summary: Query File list
      tags:
      - Metadata
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Bearer openapi_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: uploaded file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.UploadFilesResponse'
        "500":
          description: internal error
          schema:
            type: string
      summary: Upload File
      tags:
      - Metadata
  /v1/mints:
    get:
      parameters:
      - description: Bearer Open_JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: page
        in: formData
        name: page
        type: integer
      - description: limit
        in: formData
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MintTask'
            type: array
        "500":
          description: internal error
          schema:
            type: string
      summary: Get a nft list of a specified app
      tags:
      - Mints
    post:
      parameters:
      - description: Bearer Open_JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: custom_mint_info
        in: body
        name: custom_mint_info
        required: true
        schema:
          $ref: '#/definitions/services.CustomMintDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/services.EasyMintFileDto'
            type: array
        "400":
          description: invalid request
          schema:
            type: string
        "422":
          description: invalid address
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      summary: Mint a nft by creating a metadata
      tags:
      - Mints
  /v1/mints/files:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Bearer Open_JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: uploaded file
        in: formData
        name: file
        required: true
        type: file
      - description: easy_mint_file_info
        in: body
        name: easy_mint_file_info
        required: true
        schema:
          $ref: '#/definitions/services.EasyMintFileDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/services.EasyMintFileDto'
            type: array
        "400":
          description: invalid request
          schema:
            type: string
        "422":
          description: invalid address
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      summary: Mint a nft by uploading a file
      tags:
      - Mints
  /v1/mints/urls:
    post:
      parameters:
      - description: Bearer Open_JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: easy_mint_meta_info
        in: body
        name: easy_mint_meta_info
        required: true
        schema:
          $ref: '#/definitions/services.EasyMintMetaDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/services.EasyMintFileDto'
            type: array
        "400":
          description: invalid request
          schema:
            type: string
        "422":
          description: invalid address
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      summary: Mint a nft by creating a metadata
      tags:
      - Mints
  /v1/refresh_token:
    post:
      parameters:
      - description: Bearer openapi_token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: correct response
          schema:
            type: string
        "401":
          description: internal error
          schema:
            type: string
      summary: Refresh open api token
      tags:
      - Login
swagger: "2.0"
