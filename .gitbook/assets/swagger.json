{
    "swagger": "2.0",
    "info": {
        "description": "The responses of the open api in swagger focus on the data field rather than the code and the message fields",
        "title": "Rainbow-API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "api.nftrainbow.xyz",
    "basePath": "/v1",
    "paths": {
        "/contracts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the contract list containing the contracts deployed through the specified app.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Obtain contract list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Open_JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Contract"
                            }
                        }
                    },
                    "50000": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deploy a ERC721 or ERC1155 contract.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Deploy contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Open_JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "contract_info",
                        "name": "contract_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.ContractDeployDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Contract"
                        }
                    },
                    "40000": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "40002": {
                        "description": "Invalid address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "50000": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/contracts/:address/sponsor": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the sponsor of the specified contract according to address.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Query sponsor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Open_JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "chain",
                        "name": "chain",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/services.SponsorInfo"
                            }
                        }
                    },
                    "40002": {
                        "description": "Invalid address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "50000": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Set the sponsor for a specified contract according to the address",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Set sponsor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Open_JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "40002": {
                        "description": "Invalid address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "50000": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/contracts/detail/:id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Contract info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Contract detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Open_JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Contract"
                        }
                    },
                    "40000": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "50000": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/files": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the file list containing the info of the files uploaded in the specified app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Obtain file list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer openapi_token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ExposedFile"
                            }
                        }
                    },
                    "50000": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload a file which can be a video, an image and so on",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Upload file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer openapi_token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "uploaded file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.UploadFilesResponse"
                        }
                    },
                    "50000": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/files/oss": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload a file to OSS, which can be a video, an image and so on",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Upload file to OSS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer openapi_token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "uploaded file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.UploadFilesResponse"
                        }
                    },
                    "50000": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login the app to get the JWT according to the app_id and app_secret",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "App login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "app_id",
                        "name": "app_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "app_secret",
                        "name": "app_secret",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "correct response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "40101": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/metadata/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the metadata list containing the info of the metadata created in the specified app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Obtain metadata list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer openapi_token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "nft_address",
                        "name": "nft_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/services.QueryMetadataResponse"
                            }
                        }
                    },
                    "50000": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create NFT metadata by providing the info including name, description and so on",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Create NFT metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer openapi_token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "metadata_info",
                        "name": "metadata_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Metadata"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.CreateMetadataResponse"
                        }
                    },
                    "40000": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "50000": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/metadata/:metadata_id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Query the metadata according to metadata_id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Query metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer openapi_token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "metadata_id",
                        "name": "metadata_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ExposedMetadata"
                        }
                    },
                    "40000": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "50000": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mints": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the NFT list containing the NFTs minted in the specified app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mints"
                ],
                "summary": "Obtain NFT list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Open_JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MintTask"
                            }
                        }
                    },
                    "50000": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mint a NFT by providing a metadata url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mints"
                ],
                "summary": "Mint NFT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Open_JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "custom_mint_info",
                        "name": "custom_mint_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.CustomMintDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/services.EasyMintFileDto"
                            }
                        }
                    },
                    "40000": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "40002": {
                        "description": "Invalid address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "50000": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "60002": {
                        "description": "Contract has no sponsor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mints/:id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get NFT detail info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mints"
                ],
                "summary": "Mint NFT detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Open_JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MintTask"
                        }
                    },
                    "40000": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "50000": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mints/easy/files": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mint a NFT by uploading a file which can be a video, image and so on",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mints"
                ],
                "summary": "Mint NFT with file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Open_JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "uploaded file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "description": "easy_mint_file_info",
                        "name": "easy_mint_file_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.EasyMintFileDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/services.EasyMintFileDto"
                            }
                        }
                    },
                    "40000": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "40002": {
                        "description": "Invalid address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "50000": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mints/easy/urls": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mint several NFTs once",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mints"
                ],
                "summary": "Batch Mint NFTs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Open_JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "custom_mint_batch_dto",
                        "name": "custom_mint_batch_dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.CustomMintBatchDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MintBatchTask"
                            }
                        }
                    },
                    "40000": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "40002": {
                        "description": "Invalid address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "40007": {
                        "description": "Invalid mint amount, mint amount could not be 0",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "50000": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "60002": {
                        "description": "Contract has no sponsor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/refresh_token": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtain a new JWT",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Refresh JWT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer openapi_token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "correct response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "40101": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "big.Int": {
            "type": "object"
        },
        "cfxaddress.Address": {
            "type": "object"
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.Attributes": {
            "type": "object",
            "properties": {
                "attribute_name": {
                    "type": "string"
                },
                "display_type": {
                    "type": "string"
                },
                "metadataId": {
                    "type": "integer"
                },
                "trait_type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Contract": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "app_id": {
                    "type": "integer"
                },
                "base_uri": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "chain_type": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner_address": {
                    "type": "string"
                },
                "royalties_address": {
                    "type": "string"
                },
                "royalties_bps": {
                    "type": "integer"
                },
                "status": {
                    "description": "0-pending, 1-success, 2-failed",
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                },
                "tokens_burnable_admin": {
                    "type": "boolean"
                },
                "tokens_transferable_admin": {
                    "type": "boolean"
                },
                "transfer_cooldown_time": {
                    "type": "integer"
                },
                "tx_id": {
                    "type": "integer"
                },
                "type": {
                    "description": "1-ERC721, 2-ERC1155",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ExposedAttributes": {
            "type": "object",
            "properties": {
                "attribute_name": {
                    "type": "string"
                },
                "display_type": {
                    "type": "string"
                },
                "trait_type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.ExposedFile": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "file_type": {
                    "type": "string"
                },
                "file_url": {
                    "type": "string"
                }
            }
        },
        "models.ExposedMetadata": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ExposedAttributes"
                    }
                },
                "description": {
                    "type": "string"
                },
                "external_link": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Metadata": {
            "type": "object",
            "required": [
                "description",
                "image",
                "name"
            ],
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Attributes"
                    }
                },
                "description": {
                    "type": "string"
                },
                "external_link": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nft_address": {
                    "type": "string"
                }
            }
        },
        "models.MintBatchTask": {
            "type": "object",
            "properties": {
                "app_id": {
                    "type": "integer"
                },
                "chain_id": {
                    "type": "integer"
                },
                "chain_type": {
                    "type": "integer"
                },
                "contract": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "error": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MintItem"
                    }
                },
                "status": {
                    "description": "0-pending, 1-success, 2-failed",
                    "type": "integer"
                },
                "tx_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.MintItem": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "mintBatchTaskID": {
                    "type": "integer"
                },
                "mint_to": {
                    "type": "string"
                },
                "token_id": {
                    "type": "integer"
                },
                "token_uri": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.MintTask": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "app_id": {
                    "type": "integer"
                },
                "chain_id": {
                    "type": "integer"
                },
                "chain_type": {
                    "type": "integer"
                },
                "contract": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "error": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mint_to": {
                    "type": "string"
                },
                "status": {
                    "description": "0-pending, 1-success, 2-failed",
                    "type": "integer"
                },
                "token_id": {
                    "type": "integer"
                },
                "token_uri": {
                    "type": "string"
                },
                "tx_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "services.ContractDeployDto": {
            "type": "object",
            "required": [
                "chain",
                "name",
                "owner_address",
                "symbol",
                "type"
            ],
            "properties": {
                "base_uri": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_address": {
                    "type": "string"
                },
                "royalties_address": {
                    "type": "string"
                },
                "royalties_bps": {
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                },
                "tokens_burnable_admin": {
                    "type": "boolean"
                },
                "tokens_transferable_admin": {
                    "type": "boolean"
                },
                "transfer_cooldown_time": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "services.CreateMetadataResponse": {
            "type": "object",
            "properties": {
                "metadata_uri": {
                    "type": "string"
                }
            }
        },
        "services.CustomMintBatchDto": {
            "type": "object",
            "required": [
                "chain",
                "contract_address",
                "contract_type",
                "mint_items"
            ],
            "properties": {
                "chain": {
                    "type": "string"
                },
                "contract_address": {
                    "type": "string"
                },
                "contract_type": {
                    "type": "string"
                },
                "mint_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.MintItemDto"
                    }
                }
            }
        },
        "services.CustomMintDto": {
            "type": "object",
            "required": [
                "chain",
                "contract_address",
                "contract_type",
                "metadata_uri",
                "mint_to_address"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "chain": {
                    "type": "string"
                },
                "contract_address": {
                    "type": "string"
                },
                "contract_type": {
                    "type": "string"
                },
                "metadata_uri": {
                    "type": "string"
                },
                "mint_to_address": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "services.EasyMintFileDto": {
            "type": "object",
            "required": [
                "chain",
                "description",
                "mint_to_address",
                "name"
            ],
            "properties": {
                "chain": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "mint_to_address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "services.EasyMintMetaDto": {
            "type": "object",
            "required": [
                "chain",
                "description",
                "file_url",
                "mint_to_address",
                "name"
            ],
            "properties": {
                "chain": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "file_url": {
                    "type": "string"
                },
                "mint_to_address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "services.MintItemDto": {
            "type": "object",
            "required": [
                "metadata_uri",
                "mint_to_address"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "metadata_uri": {
                    "type": "string"
                },
                "mint_to_address": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "services.QueryMetadataResponse": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/models.ExposedMetadata"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "services.SponsorInfo": {
            "type": "object",
            "properties": {
                "collateral_sponsor": {
                    "$ref": "#/definitions/cfxaddress.Address"
                },
                "collateral_sponsor_balance": {
                    "$ref": "#/definitions/big.Int"
                },
                "gas_sponsor": {
                    "$ref": "#/definitions/cfxaddress.Address"
                },
                "gas_sponsor_balance": {
                    "$ref": "#/definitions/big.Int"
                },
                "gas_upper_bound": {
                    "description": "Admin                    cfxaddress.Address `json:\"admin\"`",
                    "$ref": "#/definitions/big.Int"
                },
                "is_all_white_listed": {
                    "type": "boolean"
                }
            }
        },
        "services.UploadFilesResponse": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "file_type": {
                    "type": "string"
                },
                "file_url": {
                    "type": "string"
                }
            }
        }
    }
}